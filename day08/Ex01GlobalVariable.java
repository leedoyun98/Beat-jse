package day08;

import java.util.Scanner;

// 전역 변수
// 전역 변수란 해당 프로그램 전체에서
// 접근가능한 변수를 
// 전역 변수라고 한다.
// 전역 변수의 잠정: 모든 메소드가 접근 가능하다.
// 전역 변수의 단전: 모든 메소드가 접근 가능하다.

// 어떤 메소드이던간에 접근이 가능하기 때문에
// 전역 변수의 사용은 이제 권장하지 않는다.
// 왜냐하면 그 값의 무결성(결정이 없음)을 검증 할려면
// 여러 메소드를 다 확인해야하기 때문에
// 확인도 어렵고 확인이 정확하지 않을 수도 있다!!!


public class Ex01GlobalVariable {
	// 전역 변수의 겨웅 유효범위가 프로그램 전체가 되어야 하기 때문에
	// 즉 클래스의 바로 다음 줄에 나온다.
	final int userNumber = 0;
    final Scanner scanner = new Scanner(System.in);
	// 하지만 3세대 언어에선 이 위치에
	// 우리가 변수를 선언하면?
	// 변수가 아닌 필드가 된다.
	
	// 그렇다면 우리가 정말정말 모든 메소드가 쓸 몇개의 변수를
	// private 선언하고, 겟터/셋터 만들지 않으면?
	// 조금이나마 해당 변수의 무결성을 올려줄 수 있다.
	
	// 필드와 전역 변수의 차이점
	// 필드: 우리가 객체를 만들고 나서 필드의 값을 정해줌.(setter/getter  사용하던, 생성자를 사용하던)
	//      따라서 필드 선언에는 초기화식이 없음.
	// 전역 변수: 선언과 초기화가 이루어져있어서 객체마다 해당 필드의 값이 같음.
	

}
